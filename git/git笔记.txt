clear 			清屏
echo ''  			console.log()
echo''>text.txt 
ll 			查看子文件
find 目录名  		查找所有子孙目录、文件
find 目录名 -type f  		查找所有子孙文件
rm 文件名  		删除文件
mv 旧文件名 新文件名 	重命名---删除旧文件新增文件
cat 文件名  		文件里的内容
vim 文件名  		编辑文件内的内容 
i:编辑 esc退出编辑模式 :wq 保存退出 :set num 设置行号

git --version 				查看版本
git config --global user.name "ouyang"  		配置
git config --global user.email 1483372463@qq.com 	配置

git命令（CRUD）
git init 		初始化仓库
git staus  		查看文件当前状态
git diff   		查看哪些修改还没有暂存
git diff --staged  	查看哪些修改以及被暂存了还没有提交
git log 		查看历史记录 q退出
git log --oneline   	查看提交的历史记录（精简）
git add ./  	将修改加入暂存区（先到版本库再到暂存区）
git rm 		文件名 删除工作目录中对应的文件 再将修改添加到暂存区
git mv 		旧文件名 新文件名 将工作目录中的文件进行重命名 再将修改添加到暂存区
git commit -m '' 	将暂存区提交到版本库
git commit -a 	跳过暂存区直接提交
git log --oneline --decorate --graph --all			查看项目分叉历史
git config --global alias.(别名) “命令(一个单词不要引号)“	修改别名

git命令（分支）
git branch			显示分支列表
git branch -v		查看分支最新的提交
git branch 分支名		在当前提交对象上创建分支
git branch 分支名 commithash	在指定的提交对象上创建新的分支（版本穿梭.时光机）
git checkout 分支名		切换分支
git checkout -b		创建并切换分支
git branch -d 分支名		删除空的分支 删除已被合并的分支
git branch -D 分支名		强制删除分支
git merge 分支名1		在当前分支合并分支名1
git stash			将未完成的修改保存到一个栈上
git stash list		查看存储
git stash apply		默认还原栈顶存储，但不出栈
git stash apply 存储名	应用存储
git stash drop (存储名)	移除存储
git stash pop		git stash apply+git stash drop

git后悔药

git checkout -- fiIename	撤销工作目录的修改
git reset HEAD filename	撤销暂存区的修改
git commit --amend		撤销提交(注释)

git reset --soft commithash	用commithash的内容重置HEAD内容
git reset [--mixed] commithash	用commi thash的内容重置HEAD内容重置暂存区
git reset --hard commithash	用commi thash的内容重置HEAD内容重置暂存区重置工作目录